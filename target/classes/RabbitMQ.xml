<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="false"
	   xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	   xmlns:task="http://www.springframework.org/schema/task"
	   xsi:schemaLocation="http://www.springframework.org/schema/task
	   http://www.springframework.org/schema/task/spring-task-4.1.xsd
        http://www.springframework.org/schema/rabbit
        http://www.springframework.org/schema/rabbit/spring-rabbit-2.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">
	<!--配置connection-factory，指定连接rabbit server参数 -->
	<rabbit:connection-factory id="connectionFactory1"
							   username="guest" password="guest" host="127.0.0.1" port="5672" />

	<!--通过指定下面的admin信息，当前proceducer中的exchange和queue会在rabbitmq服务器上自动生成 -->
	<rabbit:admin connection-factory="connectionFactory1" />

	<!-- 标准的建立Queue的参数 -->
	<rabbit:queue-arguments id="amqpQueueArguments">
		<!-- 暂时没有 -->
	</rabbit:queue-arguments>

<!--	<rabbit:queue queue-arguments="amqpQueueArguments" id="amqpTemplateReplyQueue" name="test"/>-->

	<!--定义rabbit template用于数据的接收和发送 -->
	<rabbit:template id="amqpTemplate"  connection-factory="connectionFactory1" exchange="myExchange" routing-key="Estore.*">
		<!--<rabbit:reply-listener concurrency="2"/>-->
	</rabbit:template>

	<!--配置topic类型exchange-->
	<rabbit:topic-exchange name="myExchange">
		<rabbit:bindings>
			<rabbit:binding queue="amqpTemplateRequestQueue1" pattern="Estore.*" />
		</rabbit:bindings>
	</rabbit:topic-exchange>

	<!--定义queue -->
	<rabbit:queue name="queueTest" id="amqpTemplateRequestQueue1" queue-arguments="amqpQueueArguments"/>

	<!-- 消息接收者 -->
	<bean id="messageReceiver" class="com.estore.mq.Comsumer"/>

	<!-- queue litener  观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象-->
	<rabbit:listener-container  connection-factory="connectionFactory1">
		<rabbit:listener queues="amqpTemplateRequestQueue1" ref="messageReceiver"/>
	</rabbit:listener-container>

</beans>
